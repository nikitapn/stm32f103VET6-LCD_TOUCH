ARM GAS  /tmp/cc8o2THV.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"heap_3.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.pvPortMalloc,"ax",%progbits
  16              		.align	1
  17              		.global	pvPortMalloc
  18              		.syntax unified
  19              		.thumb
  20              		.thumb_func
  21              		.fpu softvfp
  23              	pvPortMalloc:
  24              	.LFB5:
  25              		.file 1 "FreeRTOS/MemMang/heap_3.c"
   1:FreeRTOS/MemMang/heap_3.c **** /*
   2:FreeRTOS/MemMang/heap_3.c ****  * FreeRTOS Kernel V10.4.6
   3:FreeRTOS/MemMang/heap_3.c ****  * Copyright (C) 2021 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
   4:FreeRTOS/MemMang/heap_3.c ****  *
   5:FreeRTOS/MemMang/heap_3.c ****  * SPDX-License-Identifier: MIT
   6:FreeRTOS/MemMang/heap_3.c ****  *
   7:FreeRTOS/MemMang/heap_3.c ****  * Permission is hereby granted, free of charge, to any person obtaining a copy of
   8:FreeRTOS/MemMang/heap_3.c ****  * this software and associated documentation files (the "Software"), to deal in
   9:FreeRTOS/MemMang/heap_3.c ****  * the Software without restriction, including without limitation the rights to
  10:FreeRTOS/MemMang/heap_3.c ****  * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
  11:FreeRTOS/MemMang/heap_3.c ****  * the Software, and to permit persons to whom the Software is furnished to do so,
  12:FreeRTOS/MemMang/heap_3.c ****  * subject to the following conditions:
  13:FreeRTOS/MemMang/heap_3.c ****  *
  14:FreeRTOS/MemMang/heap_3.c ****  * The above copyright notice and this permission notice shall be included in all
  15:FreeRTOS/MemMang/heap_3.c ****  * copies or substantial portions of the Software.
  16:FreeRTOS/MemMang/heap_3.c ****  *
  17:FreeRTOS/MemMang/heap_3.c ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  18:FreeRTOS/MemMang/heap_3.c ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
  19:FreeRTOS/MemMang/heap_3.c ****  * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
  20:FreeRTOS/MemMang/heap_3.c ****  * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
  21:FreeRTOS/MemMang/heap_3.c ****  * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
  22:FreeRTOS/MemMang/heap_3.c ****  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  23:FreeRTOS/MemMang/heap_3.c ****  *
  24:FreeRTOS/MemMang/heap_3.c ****  * https://www.FreeRTOS.org
  25:FreeRTOS/MemMang/heap_3.c ****  * https://github.com/FreeRTOS
  26:FreeRTOS/MemMang/heap_3.c ****  *
  27:FreeRTOS/MemMang/heap_3.c ****  */
  28:FreeRTOS/MemMang/heap_3.c **** 
  29:FreeRTOS/MemMang/heap_3.c **** 
  30:FreeRTOS/MemMang/heap_3.c **** /*
  31:FreeRTOS/MemMang/heap_3.c ****  * Implementation of pvPortMalloc() and vPortFree() that relies on the
  32:FreeRTOS/MemMang/heap_3.c ****  * compilers own malloc() and free() implementations.
  33:FreeRTOS/MemMang/heap_3.c ****  *
ARM GAS  /tmp/cc8o2THV.s 			page 2


  34:FreeRTOS/MemMang/heap_3.c ****  * This file can only be used if the linker is configured to to generate
  35:FreeRTOS/MemMang/heap_3.c ****  * a heap memory area.
  36:FreeRTOS/MemMang/heap_3.c ****  *
  37:FreeRTOS/MemMang/heap_3.c ****  * See heap_1.c, heap_2.c and heap_4.c for alternative implementations, and the
  38:FreeRTOS/MemMang/heap_3.c ****  * memory management pages of https://www.FreeRTOS.org for more information.
  39:FreeRTOS/MemMang/heap_3.c ****  */
  40:FreeRTOS/MemMang/heap_3.c **** 
  41:FreeRTOS/MemMang/heap_3.c **** #include <stdlib.h>
  42:FreeRTOS/MemMang/heap_3.c **** 
  43:FreeRTOS/MemMang/heap_3.c **** /* Defining MPU_WRAPPERS_INCLUDED_FROM_API_FILE prevents task.h from redefining
  44:FreeRTOS/MemMang/heap_3.c ****  * all the API functions to use the MPU wrappers.  That should only be done when
  45:FreeRTOS/MemMang/heap_3.c ****  * task.h is included from an application file. */
  46:FreeRTOS/MemMang/heap_3.c **** #define MPU_WRAPPERS_INCLUDED_FROM_API_FILE
  47:FreeRTOS/MemMang/heap_3.c **** 
  48:FreeRTOS/MemMang/heap_3.c **** #include "FreeRTOS.h"
  49:FreeRTOS/MemMang/heap_3.c **** #include "task.h"
  50:FreeRTOS/MemMang/heap_3.c **** 
  51:FreeRTOS/MemMang/heap_3.c **** #undef MPU_WRAPPERS_INCLUDED_FROM_API_FILE
  52:FreeRTOS/MemMang/heap_3.c **** 
  53:FreeRTOS/MemMang/heap_3.c **** #if ( configSUPPORT_DYNAMIC_ALLOCATION == 0 )
  54:FreeRTOS/MemMang/heap_3.c ****     #error This file must not be used if configSUPPORT_DYNAMIC_ALLOCATION is 0
  55:FreeRTOS/MemMang/heap_3.c **** #endif
  56:FreeRTOS/MemMang/heap_3.c **** 
  57:FreeRTOS/MemMang/heap_3.c **** /*-----------------------------------------------------------*/
  58:FreeRTOS/MemMang/heap_3.c **** 
  59:FreeRTOS/MemMang/heap_3.c **** void * pvPortMalloc( size_t xWantedSize )
  60:FreeRTOS/MemMang/heap_3.c **** {
  26              		.loc 1 60 0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 0
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30              	.LVL0:
  31 0000 10B5     		push	{r4, lr}
  32              	.LCFI0:
  33              		.cfi_def_cfa_offset 8
  34              		.cfi_offset 4, -8
  35              		.cfi_offset 14, -4
  36 0002 0446     		mov	r4, r0
  61:FreeRTOS/MemMang/heap_3.c ****     void * pvReturn;
  62:FreeRTOS/MemMang/heap_3.c **** 
  63:FreeRTOS/MemMang/heap_3.c ****     vTaskSuspendAll();
  37              		.loc 1 63 0
  38 0004 FFF7FEFF 		bl	vTaskSuspendAll
  39              	.LVL1:
  64:FreeRTOS/MemMang/heap_3.c ****     {
  65:FreeRTOS/MemMang/heap_3.c ****         pvReturn = malloc( xWantedSize );
  40              		.loc 1 65 0
  41 0008 2046     		mov	r0, r4
  42 000a FFF7FEFF 		bl	malloc
  43              	.LVL2:
  44 000e 0446     		mov	r4, r0
  45              	.LVL3:
  66:FreeRTOS/MemMang/heap_3.c ****         traceMALLOC( pvReturn, xWantedSize );
  67:FreeRTOS/MemMang/heap_3.c ****     }
  68:FreeRTOS/MemMang/heap_3.c ****     ( void ) xTaskResumeAll();
  46              		.loc 1 68 0
  47 0010 FFF7FEFF 		bl	xTaskResumeAll
ARM GAS  /tmp/cc8o2THV.s 			page 3


  48              	.LVL4:
  69:FreeRTOS/MemMang/heap_3.c **** 
  70:FreeRTOS/MemMang/heap_3.c ****     #if ( configUSE_MALLOC_FAILED_HOOK == 1 )
  71:FreeRTOS/MemMang/heap_3.c ****         {
  72:FreeRTOS/MemMang/heap_3.c ****             if( pvReturn == NULL )
  73:FreeRTOS/MemMang/heap_3.c ****             {
  74:FreeRTOS/MemMang/heap_3.c ****                 extern void vApplicationMallocFailedHook( void );
  75:FreeRTOS/MemMang/heap_3.c ****                 vApplicationMallocFailedHook();
  76:FreeRTOS/MemMang/heap_3.c ****             }
  77:FreeRTOS/MemMang/heap_3.c ****         }
  78:FreeRTOS/MemMang/heap_3.c ****     #endif
  79:FreeRTOS/MemMang/heap_3.c **** 
  80:FreeRTOS/MemMang/heap_3.c ****     return pvReturn;
  81:FreeRTOS/MemMang/heap_3.c **** }
  49              		.loc 1 81 0
  50 0014 2046     		mov	r0, r4
  51 0016 10BD     		pop	{r4, pc}
  52              		.cfi_endproc
  53              	.LFE5:
  55              		.section	.text.vPortFree,"ax",%progbits
  56              		.align	1
  57              		.global	vPortFree
  58              		.syntax unified
  59              		.thumb
  60              		.thumb_func
  61              		.fpu softvfp
  63              	vPortFree:
  64              	.LFB6:
  82:FreeRTOS/MemMang/heap_3.c **** /*-----------------------------------------------------------*/
  83:FreeRTOS/MemMang/heap_3.c **** 
  84:FreeRTOS/MemMang/heap_3.c **** void vPortFree( void * pv )
  85:FreeRTOS/MemMang/heap_3.c **** {
  65              		.loc 1 85 0
  66              		.cfi_startproc
  67              		@ args = 0, pretend = 0, frame = 0
  68              		@ frame_needed = 0, uses_anonymous_args = 0
  69              	.LVL5:
  86:FreeRTOS/MemMang/heap_3.c ****     if( pv )
  70              		.loc 1 86 0
  71 0000 48B1     		cbz	r0, .L6
  85:FreeRTOS/MemMang/heap_3.c ****     if( pv )
  72              		.loc 1 85 0
  73 0002 10B5     		push	{r4, lr}
  74              	.LCFI1:
  75              		.cfi_def_cfa_offset 8
  76              		.cfi_offset 4, -8
  77              		.cfi_offset 14, -4
  78 0004 0446     		mov	r4, r0
  87:FreeRTOS/MemMang/heap_3.c ****     {
  88:FreeRTOS/MemMang/heap_3.c ****         vTaskSuspendAll();
  79              		.loc 1 88 0
  80 0006 FFF7FEFF 		bl	vTaskSuspendAll
  81              	.LVL6:
  89:FreeRTOS/MemMang/heap_3.c ****         {
  90:FreeRTOS/MemMang/heap_3.c ****             free( pv );
  82              		.loc 1 90 0
  83 000a 2046     		mov	r0, r4
ARM GAS  /tmp/cc8o2THV.s 			page 4


  84 000c FFF7FEFF 		bl	free
  85              	.LVL7:
  91:FreeRTOS/MemMang/heap_3.c ****             traceFREE( pv, 0 );
  92:FreeRTOS/MemMang/heap_3.c ****         }
  93:FreeRTOS/MemMang/heap_3.c ****         ( void ) xTaskResumeAll();
  86              		.loc 1 93 0
  87 0010 FFF7FEFF 		bl	xTaskResumeAll
  88              	.LVL8:
  94:FreeRTOS/MemMang/heap_3.c ****     }
  95:FreeRTOS/MemMang/heap_3.c **** }
  89              		.loc 1 95 0
  90 0014 10BD     		pop	{r4, pc}
  91              	.LVL9:
  92              	.L6:
  93              	.LCFI2:
  94              		.cfi_def_cfa_offset 0
  95              		.cfi_restore 4
  96              		.cfi_restore 14
  97 0016 7047     		bx	lr
  98              		.cfi_endproc
  99              	.LFE6:
 101              		.text
 102              	.Letext0:
 103              		.file 2 "/usr/lib/gcc/arm-none-eabi/7.3.1/include/stddef.h"
 104              		.file 3 "/usr/include/newlib/machine/_default_types.h"
 105              		.file 4 "/usr/include/newlib/sys/lock.h"
 106              		.file 5 "/usr/include/newlib/sys/_types.h"
 107              		.file 6 "/usr/include/newlib/sys/reent.h"
 108              		.file 7 "/usr/include/newlib/stdlib.h"
 109              		.file 8 "/usr/include/newlib/sys/_stdint.h"
 110              		.file 9 "FreeRTOS/ARM_CM3/FreeRTOSConfig.h"
 111              		.file 10 "FreeRTOS/include/task.h"
ARM GAS  /tmp/cc8o2THV.s 			page 5


DEFINED SYMBOLS
                            *ABS*:0000000000000000 heap_3.c
     /tmp/cc8o2THV.s:16     .text.pvPortMalloc:0000000000000000 $t
     /tmp/cc8o2THV.s:23     .text.pvPortMalloc:0000000000000000 pvPortMalloc
     /tmp/cc8o2THV.s:56     .text.vPortFree:0000000000000000 $t
     /tmp/cc8o2THV.s:63     .text.vPortFree:0000000000000000 vPortFree

UNDEFINED SYMBOLS
vTaskSuspendAll
malloc
xTaskResumeAll
free
